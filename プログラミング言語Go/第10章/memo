第10章 パッケージとGoツール
■導入
パッケージシステムの目的
→プログラムの他のパッケージとは独立に関連する機能を理解や変更が容易に出来る単位にまとめることで
 設計と保守ｗ尾実用的にすること。
パッケージにすることで再利用が楽になる。

パッケージ化はカプセル化も提供する。
可視性を制限すると他二影響を与えないと確認を持って変更が出来る。

■インポートパス
インポートパスはimport宣言にかかれるやる。

■パッケージ宣言
package宣言はソースファイルの先頭に必須。

■ブランクインポート
インポートしているのに名前を参照しない場合エラーとなる。

■パッケージと命名
パッケージを作成する場合、名前は短く。
ただし意味不明にしないこと。
ローカル変数に良く使われるような名前にしない。
パッケージはたいてい単数形。
他の意味をもつパッケージ名は避ける。

■Goツール
ワークスペースの設定は環境変数のGOPATH。変更する場合はこれを変更する。
パッケージのダウンロードはgo getコマンド。
パッケージAPIは優れたドキュメンテーションを書くことがすすめられている。
go docコマンドで確認できる。

パッケージのインポートパスがinternalと命名されたパスを含むとインターナルパッケージ扱いになる。
インターナルパッケージはinternalディレクトリの親をルートとするツリー内からのみインポートできる。

go listコマンドでパッケージの問い合わせが可能。
