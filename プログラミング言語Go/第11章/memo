第11章 テスト
■go testツール
go testツールは_test.goで終わる名前を持つファイルを実行する。
名前がTestで始まるテスト関数でテストを指定する。

■Test関数
テストファイルはtestingパッケージをインポートする必要がある。
何かバグが発生した場合、テストを最初に書いてユーザからのバグ報告と同じ状況を作るのが優れたやり方。
詳細を表示したければ-vオプションを利用する。
またひとつだけ実行したい場合は-runフラグを利用して指定する。

テスト内容は表にして試すことも出来るしランダムテストを実施することも可能。
ランダムテストの場合は何をテストしたかが分かるようにすべき。

urlパッケージやhttpパッケージを利用することで外部テストも可能。
テストに失敗した場合の説明文は明瞭で簡潔であること。
脆弱なテストを避けるためには関心がある特性のみ検査すること。

■カバレッジ
テストはバグの存在を示すが存在しないことは示さない。
テスト一式がどの程度テスト対象のパッケージを動かしたかはテストのカバレッジと呼ぶ。
ステートメントカバレッジを利用することでテスト中に1回でも実行される文の割合を計れる。

■Benchmark関数
関数名にBenchmarkをつけることで計測可能。
実行時は-benchフラグをつける。

■プロファイリング
プログラムの速さを調べるには色々と計測すべき。
そのための方法としてフラグが色々ある。
-cpuprofile
-blockprofile
-memprofile

■Example関数
Example関数は以下の目的に役立つ。
・ドキュメンテーション
・go testで実行させる実行可能なテスト
・実際に試せる
